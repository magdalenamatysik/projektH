{% extends 'base.html.twig'  %}




{% block body %}




   
     
            <div class="listcolumn" id="1" ondrop="drop(event)" ondragover="allowDrop(event)"></div>
            <div class="listcolumn" id="2" ondrop="drop(event)" ondragover="allowDrop(event)"></div>
            <div class="listcolumn" id="3" ondrop="drop(event)" ondragover="allowDrop(event)"></div>
            <div class="listcolumn" id="4" ondrop="drop(event)" ondragover="allowDrop(event)"></div>
            <div class="listcolumn" id="5" ondrop="drop(event)" ondragover="allowDrop(event)"></div>

    



       
		

    </div>


    {% block javascript %}
        <script src="https://code.jquery.com/jquery-1.10.2.js"></script>

        <script>


			 function odbierzDane()
            {
                if (r.readyState == 4) {
                    if (r.status == 200 || r.status == 304) {
                        
						
						e.innerHTML = r.response;
						
                    }
                }
            }

            function changeList(adresurl, htmlid)
            {
                if (r = xmlHttp) {
                    e = document.getElementById(htmlid);
                    
                    r.open('GET', adresurl);
                    r.onreadystatechange = odbierzDane;
                    r.send(null);
                }
            }
		

            var div_list =document.getElementById("1");
            var div_list2 =document.getElementById("2");
            var div_list3 =document.getElementById("3");
            var div_list4 =document.getElementById("4");
            var div_list5 =document.getElementById("5");

            var i=0;

            {% for job in jobs %}
            if(i==1) div_list.insertAdjacentHTML('afterbegin', '<a href="/show/{{ job.id }}" draggable="true" ondragstart="drag(event)" id="{{ job.id }}" > <div class ="task"  style ="height: {{ job.duration*20}}px; margin-top: 4px;"> {{ job.name }} </div>  </a>');
            else if(i==2) div_list2.insertAdjacentHTML('afterbegin', '   <a href="/show/{{ job.id }}" draggable="true" ondragstart="drag(event)" id="{{ job.id }}" > <div class ="task"  style ="height: {{ job.duration*20}}px; margin-top: 4px;"> {{ job.name }} </div>  </a>');
            else if(i==3) div_list3.insertAdjacentHTML('afterbegin', '   <a href="/show/{{ job.id }}" draggable="true" ondragstart="drag(event)" id="{{ job.id }}"> <div class ="task" style ="height: {{ job.duration*20}}px; margin-top: 4px;"> {{ job.name }} </div>  </a>');
            else if(i==4) div_list4.insertAdjacentHTML('afterbegin', '   <a href="/show/{{ job.id }}" draggable="true" ondragstart="drag(event)" id="{{ job.id }}" > <div class ="task" style ="height: {{ job.duration*20}}px; margin-top: 4px;"> {{ job.name }} </div>  </a>');
            else {
                div_list5.insertAdjacentHTML('afterbegin', '   <a href="/show/{{ job.id }}" draggable="true" ondragstart="drag(event)" id="{{ job.id }}"> <div class ="task" style ="height: {{ job.duration*20 }}px; margin-top: 4px;"> {{ job.name }} </div>  </a>');
                i=0;
            }
            i++;

            {% endfor %}


            
            currentX =currentY =0;
            var idJob =0;
			
			
			
			 function odbierzDane()
            {
                if (r.readyState == 4) {
                    if (r.status == 200 || r.status == 304) {
                        
						
						e.innerHTML = r.response;  
					
                    }
                }
            }

			function odbierzDane2()
            {
                if (r.readyState == 4) {
                    if (r.status == 200 || r.status == 304) {
                        
						
						e.innerHTML = r.response;  
						var codes = e.getElementsByTagName("script");   
						for(var i=0;i<codes.length;i++)  
						{  
							eval(codes[i].text);  
						}  
                    }
                }
            }
			
            function changeList(adresurl, htmlid)
            {
                if (r = xmlHttp) {
                    e = document.getElementById(htmlid);
                    
                    r.open('GET', adresurl);
                    r.onreadystatechange = odbierzDane2;
                    r.send(null);
                }
            }


			function addJob(adresurl)
            {
                if (r = xmlHttp) {
                    e = document;
                    r.open('GET', adresurl);
                    r.onreadystatechange = odbierzDane;
                    r.send(null);
                }
            }
			
            $('form.ajax').on('submit',function () {
                var that =$(this);
                url=that.attr('action'),
                        type= that.attr('method'),
                        data={};

                that.find('[name]').each(function (index) {
                    var that= $(this),
                            name=that.attr('name');
                    data[name]=that.val();
                });

                $.ajax({
                    url: url,
                    type: type,
                    data: data,
                    success: function (response) {
                        console.log(response);
                    }


                });
                return false;
            })


			
			
            function allowDrop(ev) {
                ev.preventDefault();
                ev.dataTransfer.dropEffect = "move";

            }
			var id;
            function drag(ev) {
                ev.dataTransfer.setData("text", ev.target.id);
				id = ev.target.id;
				
				
				var t = document.createElement('blank');
				

            }

			var test;
			
            function drop(ev) {
                ev.preventDefault();
                var data = ev.dataTransfer.getData("text");



                if (ev.ctrlKey)
                {
                    var nodeCopy = document.getElementById(data).cloneNode(true);
                    nodeCopy.id = "newId"; /* We cannot use the same ID */
					
					
					var t = document.createElement('task');
					ev.target.appendChild(t);
					
					var Y = ev.pageY;
                    ev.target.appendChild(nodeCopy);
					
					 
                }
                else {
				
					var Y = ev.pageY;
					var X = ev.pageX;
					var k = 0;
					var z = 0;
					var y = Y-360;
					
					if (Y<360){
						addJob('/return/'+id);
					}else{
					

					var tans = $(ev.target).prev().contents().filter("em").wrap("<b/>");;
					
					var t = 100;
					if (t<0) t = y;
					ev.target.insertAdjacentHTML('beforeend', ' <div class= "blank" style="position: relative; height: '+ t +'px;" >   </div>');
					var yz = ev.target.appendChild(document.getElementById(data));
					
					addJob('/test/'+y+'/'+X+'/'+id);
					}
                   
                }
				
				

            }




            var xmlHttp = createXmlHttpRequestObject();

            function createXmlHttpRequestObject()
            {
                var xmlHttp;

                if(window.ActiveXObject)
                {
                    try
                    {
                        xmlHttp = new ActiveXObject("Microsoft.XMLHTTP");
                    }catch(e)
                    {
                        xmlHttp = false;
                    }
                }
                else
                {
                    try
                    {
                        xmlHttp = new XMLHttpRequest();
                    }catch(e)
                    {
                        xmlHttp = false;
                    }
                }

                if(!xmlHttp)
                    alert("cant create object");
                else
                    return xmlHttp;


            }


            var r;
            var e;




           


        </script>

    {% endblock %}






{% endblock %}





